
BuildCommandPage {
        file io.util.WriteFile
        file:Content = CommandPage
        file:Name = "cmd.html"
        : = file:Ready
}

CommandPage {
        h Html
        h: = :
        h:Title = "Command-line tool"
        h:Body = t:

        t ForkTemplate
        t:Data = {
		Backquoted ""
        }
        t:Template = `
<h1>Command-line tool</h1>

<!--ul>
<li><a href="#reflex">Reflex</a></li>
</ul -->

<p><br>

<p>

<ol>
	<li>Register built-in gates into a single namespace circuit. (Built-in gates are 
	implemented in <code>github.com/gocircuit/escher/faculty</code>.)
	<li>Load circuit definitions from a given source directory and its descendants and add them to the 
	namespace circuit
	<li>Using the namespace, materialize a chosen <em>main</em> circuit
	<li>If an error occurs, or no circuit is designated as main, the tool will default to
	its “recovery” shell
</ol>

<h3>Usage</h3>

<pre>
escher [-src SourceDirectory] [-show] [-d CircuitDiscoveryAddr] MainCircuit Arguments*
</pre>

        `
}
