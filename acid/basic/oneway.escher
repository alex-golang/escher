
Door { // : :Strobe :View
	in Fork
	in:X = :View
	in:S = :Strobe
	in: = out:

	out Fork
	out:X = :
}

TestDoor { // test repeated application
	x Door
	x:View = testValues
	x: = m:0
	x:Strobe = 1 // testValues

	m testing.Match
	m:1 = testValues
	m: = Show //wait:View

//	wait Wait
//	wait:For = "a"
//	wait: = os.Exit
}

testValues {
	t YieldValues
	t:Circuit = { 1, 2, 3, "a" }
	t: = :
}
