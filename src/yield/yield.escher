
// Values yields all gate values of its default valve circuit argument.
Values { // : :Frame :Control
	yield Gates
	yield: = :
	yield:Control = :Control
	yield:Frame = fork:

	fork Fork
	fork:Value = :Frame
}

// Names yields all gate names of its default valve circuit argument.
Names { // : :Frame :Control
	yield Gates
	yield: = :
	yield:Control = :Control
	yield:Frame = fork:

	fork Fork
	fork:Name = :Frame
}

TestValues { // TODO: The expected side of the match gate should use a different method to compute the result.
	tx testValues
	tx:Frame = match:Got
	tx:Control = os.ExitSuccess

	match test.Match
	match:Expected = ty:Frame
	match: = Ignore

	ty:Control = Ignore
	ty testValues
}

testValues { // :Frame :Control
	t Values
	t: = { 1, 2, 3 }
	t:Frame = :Frame
	t:Control = :Control
}
