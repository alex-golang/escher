Draw {
	`// Plant use.Output over the default Escher memory.
	// Drawing circuits (below) use use.Output to write their stream output.`
	shadow escher.MemoryShadow
	shadow:Shadow = {
		use {
			Output { : = os.Stdout }
		}
	}
	shadow: = x:Memory

	`// Materialize the drawing circuit, using the shadowed memory prepared above`
	x escher.Spark
	x:Residue = Ignore
	x:Value = {
		s Star
		s:0 = {
			Time 0
			Position 0+1i
			Orientation -0.02+0i
		}
		s:1 = circle:View

		circle draw.Circle
		circle: = age:View

		age draw.Age
		age: = move:View

		move draw.Move
		move: = die:View

		die draw.Die
		die:At = 3
		die: = s:2
	}
}
