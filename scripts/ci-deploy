#!/usr/bin/env bash

# SPDX-FileCopyrightText: 2021 Robin Vobruba <hoijui.quaero@gmail.com>
#
# SPDX-License-Identifier: Unlicense

# Build the handbook

# Exit immediately on each error and unset variable;
# see: https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
set -Eeuo pipefail
#set -Eeu

script_dir=$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")
main_src_dir="./cmd/escher/"
min_go_version="1.13.1"

function ver_is_min() {
	ver="$1"
	min="$2"
	smaller="$(printf '%s\n%s' "$ver" "$min" \
		| sort -t '.' -k 1,1 -k 2,2 -k 3,3 -k 4,4 -g \
		| tail -n 1)"
	[ "$smaller" = "$min" ]
}

if ! which go > /dev/null
then
	>&2 echo "ERROR: The 'go' is not in PATH -> Go is not propperly installed."
	>&2 echo "ERROR: Please install at least version $min_go_version!"
	exit 1
fi

go_version="$(go version | sed -e 's|^[^0-9]\+||' -e 's| .*||')"

if ver_is_min "$go_version" "$min_go_version"
then
	>&2 echo "ERROR: Minimum go version is $min_go_version,"
	>&2 echo "ERROR: but the 'go' in PATH is version $go_version."
	exit 2
fi

if ! which inkscape > /dev/null
then
	>&2 echo "ERROR: The 'inkscape' executable is not in PATH."
	exit 3
fi

echo "Get Go dependencies ..."
go get -v -t -d ./...

echo "Install the main executable into PATH ..."
go install -v "$main_src_dir"

echo "Build the Handbook ..."
mkdir -p public
"$script_dir/build_handbook.sh" ./public

